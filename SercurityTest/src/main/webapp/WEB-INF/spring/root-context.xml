<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
       <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
       <property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
       <property name="username" value="spring"/>
       <property name="password" value="java"/>
    </bean>  
    
	<!-- 
       데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 SqlSessionTemplate 객체를 생성한다.
       1) dataSource
       2) mapper xml의 위치 선정
       3) mybatis config
       ref는 레퍼런스(참조) 위에 적힌 id dataSource를 아래 ref dataSource로 작성
     -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"/>
       <property name="mapperLocations" value="classpath:/sqlmap/**/*_SQL.xml"/>
       <property name="configLocation" value="/WEB-INF/mybatisAlias/mybatisAlias.xml"/>
       
    </bean>
    
    <!-- 
       데이터베이스에 개별적으로 쿼리를 실행시키는 객체
       이 객체를 통해서 query를 실핸한다.
     -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
       <constructor-arg name="sqlSessionFactory" index="0" ref="sqlSessionFactory"/>
    </bean>
      
   	<!-- 
      	Mapper 인터페이스 설정
      	개발자가 직접 DAO를 설정하지 않아도 자동으로 Mapper 인터페이스를 활용하는 객체를 생성하게 된다.
   	 -->
   	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      	<property name="basePackage" value="kr.or.ddit.mapper"/>
   	</bean>
	
</beans>
